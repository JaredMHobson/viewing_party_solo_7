---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<TMDB_API_KEY>&query=Harry%20Potter
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.9.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 09 May 2024 05:33:12 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=19857
      X-Memc:
      - HIT
      X-Memc-Key:
      - 5a236c762458b35ab9043e981db8821c
      X-Memc-Age:
      - '6791'
      X-Memc-Expires:
      - '19857'
      Etag:
      - W/"07e473e2b13c867fd4599fcee42a77b6"
      Vary:
      - Accept-Encoding,accept-encoding
      - Origin
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 0b40a98675b17834ad886e4848be9fac.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX50-C2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - pgxHTZMyEEcea9PFcXUIq_qGcJS65TQzNYlwQ-LtYXj2EtIH_RcHwQ==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 09 May 2024 05:33:12 GMT
recorded_with: VCR 6.2.0
