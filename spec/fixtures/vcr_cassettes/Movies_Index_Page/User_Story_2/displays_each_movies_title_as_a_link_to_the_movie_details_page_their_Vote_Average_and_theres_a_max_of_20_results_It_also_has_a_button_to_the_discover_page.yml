---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<TMDB_API_KEY>&query=harry%20potter
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v2.9.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 08 May 2024 19:23:53 GMT
      Server:
      - openresty
      Cache-Control:
      - public, max-age=7098
      X-Memc:
      - HIT
      X-Memc-Key:
      - 5a236c762458b35ab9043e981db8821c
      X-Memc-Age:
      - '19557'
      X-Memc-Expires:
      - '7098'
      Etag:
      - W/"398bcce9a14e0a77de60770ce4561590"
      Vary:
      - Accept-Encoding,accept-encoding
      - Origin
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 a65d4c73d0dccfbca53c6259a6c33b26.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - LAX50-C2
      Alt-Svc:
      - h3=":443"; ma=86400
      X-Amz-Cf-Id:
      - Vp5LNhuviBlUDDr6hP94zH24SH2jqcWa6chx6n22KNBSO4AG9xseWw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 08 May 2024 19:23:53 GMT
recorded_with: VCR 6.2.0
